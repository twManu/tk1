# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = R3
R3_cppfiles   += ./../../src/R3/thread.cpp

R3_debug_hpaths    := 
R3_debug_hpaths    += ./../../src/R3
R3_debug_hpaths    += ./../../include
R3_debug_lpaths    := 
R3_debug_defines   := $(R3_custom_defines)
R3_debug_defines   += LINUX=1
R3_debug_defines   += _LIB
R3_debug_defines   += GLEW_NO_GLU=1
R3_debug_defines   += _DEBUG
R3_debug_libraries := 
R3_debug_libraries += pthread
R3_debug_libraries += glfw3
R3_debug_cflags    := $(R3_custom_cflags)
R3_debug_cflags    += $(addprefix -D, $(R3_debug_defines))
R3_debug_cflags    += $(addprefix -I, $(R3_debug_hpaths))
R3_debug_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
R3_debug_cflags  += -O0 -ggdb
R3_debug_lflags    := $(R3_custom_lflags)
R3_debug_lflags    += $(addprefix -L, $(R3_debug_lpaths))
R3_debug_lflags    += -Wl,--start-group $(addprefix -l, $(R3_debug_libraries)) -Wl,--end-group
R3_debug_objsdir  := $(OBJS_DIR)/R3_debug
R3_debug_obj      := 
R3_debug_cpp_o    = $(addprefix $(R3_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(R3_cppfiles)))))
R3_debug_obj      += $(R3_debug_cpp_o) 
R3_debug_bin      := ./../../lib/linux-arm32/libR3D.a

clean_R3_debug: 
	@$(ECHO) clean R3 debug
	@$(RMDIR) $(R3_debug_objsdir)
	@$(RMDIR) $(R3_debug_bin)

build_R3_debug: postbuild_R3_debug
postbuild_R3_debug: mainbuild_R3_debug
mainbuild_R3_debug: prebuild_R3_debug $(R3_debug_bin)
prebuild_R3_debug:

-include $(R3_debug_cpp_o:%o=%d)

$(R3_debug_bin): $(R3_debug_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libR3D.a`
	@$(AR) r $(R3_debug_bin) $^
	@$(RANLIB) $(R3_debug_bin)
	@$(ECHO) building $@ complete!

$(R3_debug_cpp_o): $(R3_debug_objsdir)/%.o: 
	@$(ECHO) R3: compiling debug $(filter %$*,$(R3_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(R3_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(R3_cppfiles)) -o $@
R3_release_hpaths    := 
R3_release_hpaths    += ./../../src/R3
R3_release_hpaths    += ./../../include
R3_release_lpaths    := 
R3_release_defines   := $(R3_custom_defines)
R3_release_defines   += LINUX=1
R3_release_defines   += _LIB
R3_release_defines   += GLEW_NO_GLU=1
R3_release_defines   += NDEBUG
R3_release_libraries := 
R3_release_libraries += pthread
R3_release_libraries += glfw3
R3_release_cflags    := $(R3_custom_cflags)
R3_release_cflags    += $(addprefix -D, $(R3_release_defines))
R3_release_cflags    += $(addprefix -I, $(R3_release_hpaths))
R3_release_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
R3_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
R3_release_lflags    := $(R3_custom_lflags)
R3_release_lflags    += $(addprefix -L, $(R3_release_lpaths))
R3_release_lflags    += -Wl,--start-group $(addprefix -l, $(R3_release_libraries)) -Wl,--end-group
R3_release_objsdir  := $(OBJS_DIR)/R3_release
R3_release_obj      := 
R3_release_cpp_o    = $(addprefix $(R3_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(R3_cppfiles)))))
R3_release_obj      += $(R3_release_cpp_o) 
R3_release_bin      := ./../../lib/linux-arm32/libR3.a

clean_R3_release: 
	@$(ECHO) clean R3 release
	@$(RMDIR) $(R3_release_objsdir)
	@$(RMDIR) $(R3_release_bin)

build_R3_release: postbuild_R3_release
postbuild_R3_release: mainbuild_R3_release
mainbuild_R3_release: prebuild_R3_release $(R3_release_bin)
prebuild_R3_release:

-include $(R3_release_cpp_o:%o=%d)

$(R3_release_bin): $(R3_release_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libR3.a`
	@$(AR) r $(R3_release_bin) $^
	@$(RANLIB) $(R3_release_bin)
	@$(ECHO) building $@ complete!

$(R3_release_cpp_o): $(R3_release_objsdir)/%.o: 
	@$(ECHO) R3: compiling release $(filter %$*,$(R3_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(R3_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(R3_cppfiles)) -o $@
