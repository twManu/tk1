# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = Half
Half_cppfiles   += ./../../src/Half/half.cpp

Half_debug_hpaths    := 
Half_debug_hpaths    += ./../../src/Half
Half_debug_hpaths    += ./../../include
Half_debug_lpaths    := 
Half_debug_defines   := $(Half_custom_defines)
Half_debug_defines   += LINUX=1
Half_debug_defines   += _LIB
Half_debug_defines   += GLEW_NO_GLU=1
Half_debug_defines   += _DEBUG
Half_debug_libraries := 
Half_debug_libraries += pthread
Half_debug_libraries += glfw3
Half_debug_cflags    := $(Half_custom_cflags)
Half_debug_cflags    += $(addprefix -D, $(Half_debug_defines))
Half_debug_cflags    += $(addprefix -I, $(Half_debug_hpaths))
Half_debug_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
Half_debug_cflags  += -O0 -ggdb
Half_debug_lflags    := $(Half_custom_lflags)
Half_debug_lflags    += $(addprefix -L, $(Half_debug_lpaths))
Half_debug_lflags    += -Wl,--start-group $(addprefix -l, $(Half_debug_libraries)) -Wl,--end-group
Half_debug_objsdir  := $(OBJS_DIR)/Half_debug
Half_debug_obj      := 
Half_debug_cpp_o    = $(addprefix $(Half_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Half_cppfiles)))))
Half_debug_obj      += $(Half_debug_cpp_o) 
Half_debug_bin      := ./../../lib/linux-arm32/libHalfD.a

clean_Half_debug: 
	@$(ECHO) clean Half debug
	@$(RMDIR) $(Half_debug_objsdir)
	@$(RMDIR) $(Half_debug_bin)

build_Half_debug: postbuild_Half_debug
postbuild_Half_debug: mainbuild_Half_debug
mainbuild_Half_debug: prebuild_Half_debug $(Half_debug_bin)
prebuild_Half_debug:

-include $(Half_debug_cpp_o:%o=%d)

$(Half_debug_bin): $(Half_debug_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libHalfD.a`
	@$(AR) r $(Half_debug_bin) $^
	@$(RANLIB) $(Half_debug_bin)
	@$(ECHO) building $@ complete!

$(Half_debug_cpp_o): $(Half_debug_objsdir)/%.o: 
	@$(ECHO) Half: compiling debug $(filter %$*,$(Half_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(Half_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(Half_cppfiles)) -o $@
Half_release_hpaths    := 
Half_release_hpaths    += ./../../src/Half
Half_release_hpaths    += ./../../include
Half_release_lpaths    := 
Half_release_defines   := $(Half_custom_defines)
Half_release_defines   += LINUX=1
Half_release_defines   += _LIB
Half_release_defines   += GLEW_NO_GLU=1
Half_release_defines   += NDEBUG
Half_release_libraries := 
Half_release_libraries += pthread
Half_release_libraries += glfw3
Half_release_cflags    := $(Half_custom_cflags)
Half_release_cflags    += $(addprefix -D, $(Half_release_defines))
Half_release_cflags    += $(addprefix -I, $(Half_release_hpaths))
Half_release_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
Half_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
Half_release_lflags    := $(Half_custom_lflags)
Half_release_lflags    += $(addprefix -L, $(Half_release_lpaths))
Half_release_lflags    += -Wl,--start-group $(addprefix -l, $(Half_release_libraries)) -Wl,--end-group
Half_release_objsdir  := $(OBJS_DIR)/Half_release
Half_release_obj      := 
Half_release_cpp_o    = $(addprefix $(Half_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Half_cppfiles)))))
Half_release_obj      += $(Half_release_cpp_o) 
Half_release_bin      := ./../../lib/linux-arm32/libHalf.a

clean_Half_release: 
	@$(ECHO) clean Half release
	@$(RMDIR) $(Half_release_objsdir)
	@$(RMDIR) $(Half_release_bin)

build_Half_release: postbuild_Half_release
postbuild_Half_release: mainbuild_Half_release
mainbuild_Half_release: prebuild_Half_release $(Half_release_bin)
prebuild_Half_release:

-include $(Half_release_cpp_o:%o=%d)

$(Half_release_bin): $(Half_release_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libHalf.a`
	@$(AR) r $(Half_release_bin) $^
	@$(RANLIB) $(Half_release_bin)
	@$(ECHO) building $@ complete!

$(Half_release_cpp_o): $(Half_release_objsdir)/%.o: 
	@$(ECHO) Half: compiling release $(filter %$*,$(Half_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(Half_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(Half_cppfiles)) -o $@
