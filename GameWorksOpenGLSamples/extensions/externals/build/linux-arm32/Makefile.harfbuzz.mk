# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = harfbuzz
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-blob.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-buffer-serialize.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-buffer.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-common.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-face.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-fallback-shape.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-font.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ft.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-layout.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-map.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-arabic.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-default.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-indic-table.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-indic.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-myanmar.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-sea.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-complex-thai.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-fallback.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape-normalize.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-shape.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ot-tag.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-set.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-shape-plan.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-shape.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-shaper.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-tt-font.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-unicode.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-warning.cc
harfbuzz_ccfiles   += ./../../src/harfbuzz/src/hb-ucdn.cc
harfbuzz_cfiles   += ./../../src/ucdn/ucdn.c

harfbuzz_debug_hpaths    := 
harfbuzz_debug_hpaths    += ./../../src/harfbuzz/src
harfbuzz_debug_hpaths    += ./../../src/harfbuzz/config/linux
harfbuzz_debug_hpaths    += ./../../src/harfbuzz/src/hb-ucdn
harfbuzz_debug_hpaths    += ./../../src/freetype-2.4.9/include
harfbuzz_debug_hpaths    += ./../../include
harfbuzz_debug_lpaths    := 
harfbuzz_debug_defines   := $(harfbuzz_custom_defines)
harfbuzz_debug_defines   += HAVE_CONFIG_H
harfbuzz_debug_defines   += HB_NO_MT
harfbuzz_debug_defines   += HAVE_OT
harfbuzz_debug_defines   += HAVE_ICU
harfbuzz_debug_defines   += LINUX=1
harfbuzz_debug_defines   += _LIB
harfbuzz_debug_defines   += GLEW_NO_GLU=1
harfbuzz_debug_defines   += _DEBUG
harfbuzz_debug_libraries := 
harfbuzz_debug_libraries += pthread
harfbuzz_debug_libraries += glfw3
harfbuzz_debug_cflags    := $(harfbuzz_custom_cflags)
harfbuzz_debug_cflags    += $(addprefix -D, $(harfbuzz_debug_defines))
harfbuzz_debug_cflags    += $(addprefix -I, $(harfbuzz_debug_hpaths))
harfbuzz_debug_cflags  += -Wno-missing-field-initializers -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-sign-compare
harfbuzz_debug_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
harfbuzz_debug_cflags  += -O0 -ggdb
harfbuzz_debug_lflags    := $(harfbuzz_custom_lflags)
harfbuzz_debug_lflags    += $(addprefix -L, $(harfbuzz_debug_lpaths))
harfbuzz_debug_lflags    += -Wl,--start-group $(addprefix -l, $(harfbuzz_debug_libraries)) -Wl,--end-group
harfbuzz_debug_objsdir  := $(OBJS_DIR)/harfbuzz_debug
harfbuzz_debug_obj      := 
harfbuzz_debug_cc_o    = $(addprefix $(harfbuzz_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(harfbuzz_ccfiles)))))
harfbuzz_debug_obj      += $(harfbuzz_debug_cc_o) 
harfbuzz_debug_c_o    = $(addprefix $(harfbuzz_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(harfbuzz_cfiles)))))
harfbuzz_debug_obj      += $(harfbuzz_debug_c_o) 
harfbuzz_debug_bin      := ./../../lib/linux-arm32/libharfbuzzD.a

clean_harfbuzz_debug: 
	@$(ECHO) clean harfbuzz debug
	@$(RMDIR) $(harfbuzz_debug_objsdir)
	@$(RMDIR) $(harfbuzz_debug_bin)

build_harfbuzz_debug: postbuild_harfbuzz_debug
postbuild_harfbuzz_debug: mainbuild_harfbuzz_debug
mainbuild_harfbuzz_debug: prebuild_harfbuzz_debug $(harfbuzz_debug_bin)
prebuild_harfbuzz_debug:

-include $(harfbuzz_debug_cc_o:%o=%d)
-include $(harfbuzz_debug_c_o:%o=%d)

$(harfbuzz_debug_bin): $(harfbuzz_debug_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libharfbuzzD.a`
	@$(AR) r $(harfbuzz_debug_bin) $^
	@$(RANLIB) $(harfbuzz_debug_bin)
	@$(ECHO) building $@ complete!

$(harfbuzz_debug_cc_o): $(harfbuzz_debug_objsdir)/%.o: 
	@$(ECHO) harfbuzz: compiling debug $(filter %$*,$(harfbuzz_ccfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(harfbuzz_debug_cflags) -MMD -MP -MF $(subst .cc.o,.cc.d,$@) -c $(filter %$*,$(harfbuzz_ccfiles)) -o $@
$(harfbuzz_debug_c_o): $(harfbuzz_debug_objsdir)/%.o: 
	@$(ECHO) harfbuzz: compiling debug $(filter %$*,$(harfbuzz_cfiles))...
	@mkdir -p $(dir $(@))
	$(CC) $(harfbuzz_debug_cflags) -MMD -MP -MF $(subst .c.o,.c.d,$@) -c $(filter %$*,$(harfbuzz_cfiles)) -o $@
harfbuzz_release_hpaths    := 
harfbuzz_release_hpaths    += ./../../src/harfbuzz/src
harfbuzz_release_hpaths    += ./../../src/harfbuzz/config/linux
harfbuzz_release_hpaths    += ./../../src/harfbuzz/src/hb-ucdn
harfbuzz_release_hpaths    += ./../../src/freetype-2.4.9/include
harfbuzz_release_hpaths    += ./../../include
harfbuzz_release_lpaths    := 
harfbuzz_release_defines   := $(harfbuzz_custom_defines)
harfbuzz_release_defines   += HAVE_CONFIG_H
harfbuzz_release_defines   += HB_NO_MT
harfbuzz_release_defines   += HAVE_OT
harfbuzz_release_defines   += HAVE_ICU
harfbuzz_release_defines   += LINUX=1
harfbuzz_release_defines   += _LIB
harfbuzz_release_defines   += GLEW_NO_GLU=1
harfbuzz_release_defines   += NDEBUG
harfbuzz_release_libraries := 
harfbuzz_release_libraries += pthread
harfbuzz_release_libraries += glfw3
harfbuzz_release_cflags    := $(harfbuzz_custom_cflags)
harfbuzz_release_cflags    += $(addprefix -D, $(harfbuzz_release_defines))
harfbuzz_release_cflags    += $(addprefix -I, $(harfbuzz_release_hpaths))
harfbuzz_release_cflags  += -Wno-missing-field-initializers -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-sign-compare
harfbuzz_release_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
harfbuzz_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
harfbuzz_release_lflags    := $(harfbuzz_custom_lflags)
harfbuzz_release_lflags    += $(addprefix -L, $(harfbuzz_release_lpaths))
harfbuzz_release_lflags    += -Wl,--start-group $(addprefix -l, $(harfbuzz_release_libraries)) -Wl,--end-group
harfbuzz_release_objsdir  := $(OBJS_DIR)/harfbuzz_release
harfbuzz_release_obj      := 
harfbuzz_release_cc_o    = $(addprefix $(harfbuzz_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(harfbuzz_ccfiles)))))
harfbuzz_release_obj      += $(harfbuzz_release_cc_o) 
harfbuzz_release_c_o    = $(addprefix $(harfbuzz_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(harfbuzz_cfiles)))))
harfbuzz_release_obj      += $(harfbuzz_release_c_o) 
harfbuzz_release_bin      := ./../../lib/linux-arm32/libharfbuzz.a

clean_harfbuzz_release: 
	@$(ECHO) clean harfbuzz release
	@$(RMDIR) $(harfbuzz_release_objsdir)
	@$(RMDIR) $(harfbuzz_release_bin)

build_harfbuzz_release: postbuild_harfbuzz_release
postbuild_harfbuzz_release: mainbuild_harfbuzz_release
mainbuild_harfbuzz_release: prebuild_harfbuzz_release $(harfbuzz_release_bin)
prebuild_harfbuzz_release:

-include $(harfbuzz_release_cc_o:%o=%d)
-include $(harfbuzz_release_c_o:%o=%d)

$(harfbuzz_release_bin): $(harfbuzz_release_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libharfbuzz.a`
	@$(AR) r $(harfbuzz_release_bin) $^
	@$(RANLIB) $(harfbuzz_release_bin)
	@$(ECHO) building $@ complete!

$(harfbuzz_release_cc_o): $(harfbuzz_release_objsdir)/%.o: 
	@$(ECHO) harfbuzz: compiling release $(filter %$*,$(harfbuzz_ccfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(harfbuzz_release_cflags) -MMD -MP -MF $(subst .cc.o,.cc.d,$@) -c $(filter %$*,$(harfbuzz_ccfiles)) -o $@
$(harfbuzz_release_c_o): $(harfbuzz_release_objsdir)/%.o: 
	@$(ECHO) harfbuzz: compiling release $(filter %$*,$(harfbuzz_cfiles))...
	@mkdir -p $(dir $(@))
	$(CC) $(harfbuzz_release_cflags) -MMD -MP -MF $(subst .c.o,.c.d,$@) -c $(filter %$*,$(harfbuzz_cfiles)) -o $@
