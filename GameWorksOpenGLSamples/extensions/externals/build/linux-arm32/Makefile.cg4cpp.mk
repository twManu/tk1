# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = cg4cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/abs.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/acos.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/all.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/any.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/asin.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/atan.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/atan2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/ceil.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/clamp.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/cos.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/cosh.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/cross.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/degrees.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/determinant.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/distance.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/dot.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/exp.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/exp2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/faceforward.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/floatToIntBits.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/floatToRawIntBits.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/floor.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/fmod.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/frac.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/fresnel.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/frexp.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/intBitsToFloat.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/inverse.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/iostream.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/isfinite.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/isinf.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/isnan.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/ldexp.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/length.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/lerp.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/lit.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/log.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/log10.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/log2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/max.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/min.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/modf.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/mul.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/normalize.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/pow.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/radians.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/reflect.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/refract.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/round.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/rsqrt.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/saturate.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/sign.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/sin.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/sincos.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/sinh.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/smoothstep.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/sqrt.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/step.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/tan.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/tanh.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/transpose.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/trunc.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper1x1.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper1x2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper1x3.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper1x4.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper2x1.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper2x2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper2x3.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper2x4.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper3x1.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper3x2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper3x3.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper3x4.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper4x1.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper4x2.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper4x3.cpp
cg4cpp_cppfiles   += ./../../src/cg4cpp/upper4x4.cpp

cg4cpp_debug_hpaths    := 
cg4cpp_debug_hpaths    += ./../../src/cg4cpp
cg4cpp_debug_hpaths    += ./../../include
cg4cpp_debug_lpaths    := 
cg4cpp_debug_defines   := $(cg4cpp_custom_defines)
cg4cpp_debug_defines   += LINUX=1
cg4cpp_debug_defines   += _LIB
cg4cpp_debug_defines   += GLEW_NO_GLU=1
cg4cpp_debug_defines   += _DEBUG
cg4cpp_debug_libraries := 
cg4cpp_debug_libraries += pthread
cg4cpp_debug_libraries += glfw3
cg4cpp_debug_cflags    := $(cg4cpp_custom_cflags)
cg4cpp_debug_cflags    += $(addprefix -D, $(cg4cpp_debug_defines))
cg4cpp_debug_cflags    += $(addprefix -I, $(cg4cpp_debug_hpaths))
cg4cpp_debug_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
cg4cpp_debug_cflags  += -O0 -ggdb
cg4cpp_debug_lflags    := $(cg4cpp_custom_lflags)
cg4cpp_debug_lflags    += $(addprefix -L, $(cg4cpp_debug_lpaths))
cg4cpp_debug_lflags    += -Wl,--start-group $(addprefix -l, $(cg4cpp_debug_libraries)) -Wl,--end-group
cg4cpp_debug_objsdir  := $(OBJS_DIR)/cg4cpp_debug
cg4cpp_debug_obj      := 
cg4cpp_debug_cpp_o    = $(addprefix $(cg4cpp_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(cg4cpp_cppfiles)))))
cg4cpp_debug_obj      += $(cg4cpp_debug_cpp_o) 
cg4cpp_debug_bin      := ./../../lib/linux-arm32/libcg4cppD.a

clean_cg4cpp_debug: 
	@$(ECHO) clean cg4cpp debug
	@$(RMDIR) $(cg4cpp_debug_objsdir)
	@$(RMDIR) $(cg4cpp_debug_bin)

build_cg4cpp_debug: postbuild_cg4cpp_debug
postbuild_cg4cpp_debug: mainbuild_cg4cpp_debug
mainbuild_cg4cpp_debug: prebuild_cg4cpp_debug $(cg4cpp_debug_bin)
prebuild_cg4cpp_debug:

-include $(cg4cpp_debug_cpp_o:%o=%d)

$(cg4cpp_debug_bin): $(cg4cpp_debug_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libcg4cppD.a`
	@$(AR) r $(cg4cpp_debug_bin) $^
	@$(RANLIB) $(cg4cpp_debug_bin)
	@$(ECHO) building $@ complete!

$(cg4cpp_debug_cpp_o): $(cg4cpp_debug_objsdir)/%.o: 
	@$(ECHO) cg4cpp: compiling debug $(filter %$*,$(cg4cpp_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(cg4cpp_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(cg4cpp_cppfiles)) -o $@
cg4cpp_release_hpaths    := 
cg4cpp_release_hpaths    += ./../../src/cg4cpp
cg4cpp_release_hpaths    += ./../../include
cg4cpp_release_lpaths    := 
cg4cpp_release_defines   := $(cg4cpp_custom_defines)
cg4cpp_release_defines   += LINUX=1
cg4cpp_release_defines   += _LIB
cg4cpp_release_defines   += GLEW_NO_GLU=1
cg4cpp_release_defines   += NDEBUG
cg4cpp_release_libraries := 
cg4cpp_release_libraries += pthread
cg4cpp_release_libraries += glfw3
cg4cpp_release_cflags    := $(cg4cpp_custom_cflags)
cg4cpp_release_cflags    += $(addprefix -D, $(cg4cpp_release_defines))
cg4cpp_release_cflags    += $(addprefix -I, $(cg4cpp_release_hpaths))
cg4cpp_release_cflags  += -g -fno-omit-frame-pointer -marm -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -Wno-reorder
cg4cpp_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
cg4cpp_release_lflags    := $(cg4cpp_custom_lflags)
cg4cpp_release_lflags    += $(addprefix -L, $(cg4cpp_release_lpaths))
cg4cpp_release_lflags    += -Wl,--start-group $(addprefix -l, $(cg4cpp_release_libraries)) -Wl,--end-group
cg4cpp_release_objsdir  := $(OBJS_DIR)/cg4cpp_release
cg4cpp_release_obj      := 
cg4cpp_release_cpp_o    = $(addprefix $(cg4cpp_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(cg4cpp_cppfiles)))))
cg4cpp_release_obj      += $(cg4cpp_release_cpp_o) 
cg4cpp_release_bin      := ./../../lib/linux-arm32/libcg4cpp.a

clean_cg4cpp_release: 
	@$(ECHO) clean cg4cpp release
	@$(RMDIR) $(cg4cpp_release_objsdir)
	@$(RMDIR) $(cg4cpp_release_bin)

build_cg4cpp_release: postbuild_cg4cpp_release
postbuild_cg4cpp_release: mainbuild_cg4cpp_release
mainbuild_cg4cpp_release: prebuild_cg4cpp_release $(cg4cpp_release_bin)
prebuild_cg4cpp_release:

-include $(cg4cpp_release_cpp_o:%o=%d)

$(cg4cpp_release_bin): $(cg4cpp_release_obj) 
	@mkdir -p `dirname ./../../lib/linux-arm32/libcg4cpp.a`
	@$(AR) r $(cg4cpp_release_bin) $^
	@$(RANLIB) $(cg4cpp_release_bin)
	@$(ECHO) building $@ complete!

$(cg4cpp_release_cpp_o): $(cg4cpp_release_objsdir)/%.o: 
	@$(ECHO) cg4cpp: compiling release $(filter %$*,$(cg4cpp_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(cg4cpp_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(cg4cpp_cppfiles)) -o $@
