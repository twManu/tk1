# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = TerrainTessellation
TerrainTessellation_cppfiles   += ./../../es3aep-kepler/TerrainTessellation/TerrainTessellation.cpp
TerrainTessellation_cppfiles   += ./../../es3aep-kepler/TerrainTessellation/noise.cpp

TerrainTessellation_debug_hpaths    := 
TerrainTessellation_debug_hpaths    += ./../../es3aep-kepler/TerrainTessellation/assets/shaders
TerrainTessellation_debug_hpaths    += ./../../es3aep-kepler/TerrainTessellation
TerrainTessellation_debug_hpaths    += ./../../../extensions/include
TerrainTessellation_debug_hpaths    += ./../../../extensions/externals/include
TerrainTessellation_debug_hpaths    += ./../../../extensions/externals/include/GLFW
TerrainTessellation_debug_lpaths    := 
TerrainTessellation_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_debug_defines   := $(TerrainTessellation_custom_defines)
TerrainTessellation_debug_defines   += LINUX=1
TerrainTessellation_debug_defines   += GLEW_NO_GLU=1
TerrainTessellation_debug_defines   += _DEBUG
TerrainTessellation_debug_libraries := 
TerrainTessellation_debug_libraries += NvAppBaseD
TerrainTessellation_debug_libraries += NvUID
TerrainTessellation_debug_libraries += NvAssetLoaderD
TerrainTessellation_debug_libraries += NvModelD
TerrainTessellation_debug_libraries += NvGLUtilsD
TerrainTessellation_debug_libraries += NvGamepadD
TerrainTessellation_debug_libraries += HalfD
TerrainTessellation_debug_libraries += GLEW
TerrainTessellation_debug_libraries += glfw3
TerrainTessellation_debug_libraries += X11
TerrainTessellation_debug_libraries += Xrandr
TerrainTessellation_debug_libraries += Xi
TerrainTessellation_debug_libraries += rt
TerrainTessellation_debug_libraries += m
TerrainTessellation_debug_libraries += GL
TerrainTessellation_debug_libraries += dl
TerrainTessellation_debug_libraries += Xxf86vm
TerrainTessellation_debug_libraries += pthread
TerrainTessellation_debug_libraries += :libHalfD.a
TerrainTessellation_debug_libraries += :libNvAppBaseD.a
TerrainTessellation_debug_libraries += :libNvAssetLoaderD.a
TerrainTessellation_debug_libraries += :libNvGamepadD.a
TerrainTessellation_debug_libraries += :libNvGLUtilsD.a
TerrainTessellation_debug_libraries += :libNvModelD.a
TerrainTessellation_debug_libraries += :libNvUID.a
TerrainTessellation_debug_cflags    := $(TerrainTessellation_custom_cflags)
TerrainTessellation_debug_cflags    += $(addprefix -D, $(TerrainTessellation_debug_defines))
TerrainTessellation_debug_cflags    += $(addprefix -I, $(TerrainTessellation_debug_hpaths))
TerrainTessellation_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TerrainTessellation_debug_cflags  += -Wno-reorder
TerrainTessellation_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
TerrainTessellation_debug_lflags    := $(TerrainTessellation_custom_lflags)
TerrainTessellation_debug_lflags    += $(addprefix -L, $(TerrainTessellation_debug_lpaths))
TerrainTessellation_debug_lflags    += -Wl,--start-group $(addprefix -l, $(TerrainTessellation_debug_libraries)) -Wl,--end-group
TerrainTessellation_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TerrainTessellation_debug_objsdir  := $(OBJS_DIR)/TerrainTessellation_debug
TerrainTessellation_debug_obj      := 
TerrainTessellation_debug_cpp_o    = $(addprefix $(TerrainTessellation_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TerrainTessellation_cppfiles)))))
TerrainTessellation_debug_obj      += $(TerrainTessellation_debug_cpp_o) 
TerrainTessellation_debug_bin      := ./../../bin/linux-arm32/TerrainTessellationD

clean_TerrainTessellation_debug: 
	@$(ECHO) clean TerrainTessellation debug
	@$(RMDIR) $(TerrainTessellation_debug_objsdir)
	@$(RMDIR) $(TerrainTessellation_debug_bin)

build_TerrainTessellation_debug: postbuild_TerrainTessellation_debug
postbuild_TerrainTessellation_debug: mainbuild_TerrainTessellation_debug
mainbuild_TerrainTessellation_debug: prebuild_TerrainTessellation_debug $(TerrainTessellation_debug_bin)
prebuild_TerrainTessellation_debug:

-include $(TerrainTessellation_debug_cpp_o:%o=%d)

$(TerrainTessellation_debug_bin): $(TerrainTessellation_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/TerrainTessellationD`
	$(CCLD) $^ $(TerrainTessellation_debug_lflags) -o $(TerrainTessellation_debug_bin) 
	@$(ECHO) building $@ complete!

$(TerrainTessellation_debug_cpp_o): $(TerrainTessellation_debug_objsdir)/%.o: 
	@$(ECHO) TerrainTessellation: compiling debug $(filter %$*,$(TerrainTessellation_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(TerrainTessellation_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(TerrainTessellation_cppfiles)) -o $@
TerrainTessellation_release_hpaths    := 
TerrainTessellation_release_hpaths    += ./../../es3aep-kepler/TerrainTessellation/assets/shaders
TerrainTessellation_release_hpaths    += ./../../es3aep-kepler/TerrainTessellation
TerrainTessellation_release_hpaths    += ./../../../extensions/include
TerrainTessellation_release_hpaths    += ./../../../extensions/externals/include
TerrainTessellation_release_hpaths    += ./../../../extensions/externals/include/GLFW
TerrainTessellation_release_lpaths    := 
TerrainTessellation_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
TerrainTessellation_release_defines   := $(TerrainTessellation_custom_defines)
TerrainTessellation_release_defines   += LINUX=1
TerrainTessellation_release_defines   += GLEW_NO_GLU=1
TerrainTessellation_release_defines   += NDEBUG
TerrainTessellation_release_libraries := 
TerrainTessellation_release_libraries += NvAppBase
TerrainTessellation_release_libraries += NvUI
TerrainTessellation_release_libraries += NvAssetLoader
TerrainTessellation_release_libraries += NvModel
TerrainTessellation_release_libraries += NvGLUtils
TerrainTessellation_release_libraries += NvGamepad
TerrainTessellation_release_libraries += Half
TerrainTessellation_release_libraries += GLEW
TerrainTessellation_release_libraries += glfw3
TerrainTessellation_release_libraries += X11
TerrainTessellation_release_libraries += Xrandr
TerrainTessellation_release_libraries += Xi
TerrainTessellation_release_libraries += rt
TerrainTessellation_release_libraries += m
TerrainTessellation_release_libraries += GL
TerrainTessellation_release_libraries += dl
TerrainTessellation_release_libraries += Xxf86vm
TerrainTessellation_release_libraries += pthread
TerrainTessellation_release_libraries += :libHalf.a
TerrainTessellation_release_libraries += :libNvAppBase.a
TerrainTessellation_release_libraries += :libNvAssetLoader.a
TerrainTessellation_release_libraries += :libNvGamepad.a
TerrainTessellation_release_libraries += :libNvGLUtils.a
TerrainTessellation_release_libraries += :libNvModel.a
TerrainTessellation_release_libraries += :libNvUI.a
TerrainTessellation_release_cflags    := $(TerrainTessellation_custom_cflags)
TerrainTessellation_release_cflags    += $(addprefix -D, $(TerrainTessellation_release_defines))
TerrainTessellation_release_cflags    += $(addprefix -I, $(TerrainTessellation_release_hpaths))
TerrainTessellation_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TerrainTessellation_release_cflags  += -Wno-reorder
TerrainTessellation_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
TerrainTessellation_release_lflags    := $(TerrainTessellation_custom_lflags)
TerrainTessellation_release_lflags    += $(addprefix -L, $(TerrainTessellation_release_lpaths))
TerrainTessellation_release_lflags    += -Wl,--start-group $(addprefix -l, $(TerrainTessellation_release_libraries)) -Wl,--end-group
TerrainTessellation_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TerrainTessellation_release_objsdir  := $(OBJS_DIR)/TerrainTessellation_release
TerrainTessellation_release_obj      := 
TerrainTessellation_release_cpp_o    = $(addprefix $(TerrainTessellation_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TerrainTessellation_cppfiles)))))
TerrainTessellation_release_obj      += $(TerrainTessellation_release_cpp_o) 
TerrainTessellation_release_bin      := ./../../bin/linux-arm32/TerrainTessellation

clean_TerrainTessellation_release: 
	@$(ECHO) clean TerrainTessellation release
	@$(RMDIR) $(TerrainTessellation_release_objsdir)
	@$(RMDIR) $(TerrainTessellation_release_bin)

build_TerrainTessellation_release: postbuild_TerrainTessellation_release
postbuild_TerrainTessellation_release: mainbuild_TerrainTessellation_release
mainbuild_TerrainTessellation_release: prebuild_TerrainTessellation_release $(TerrainTessellation_release_bin)
prebuild_TerrainTessellation_release:

-include $(TerrainTessellation_release_cpp_o:%o=%d)

$(TerrainTessellation_release_bin): $(TerrainTessellation_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/TerrainTessellation`
	$(CCLD) $^ $(TerrainTessellation_release_lflags) -o $(TerrainTessellation_release_bin) 
	@$(ECHO) building $@ complete!

$(TerrainTessellation_release_cpp_o): $(TerrainTessellation_release_objsdir)/%.o: 
	@$(ECHO) TerrainTessellation: compiling release $(filter %$*,$(TerrainTessellation_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(TerrainTessellation_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(TerrainTessellation_cppfiles)) -o $@
