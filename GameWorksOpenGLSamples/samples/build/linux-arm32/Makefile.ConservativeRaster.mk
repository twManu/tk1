# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = ConservativeRaster
ConservativeRaster_cppfiles   += ./../../gl4-maxwell/ConservativeRaster/ConservativeRaster.cpp

ConservativeRaster_debug_hpaths    := 
ConservativeRaster_debug_hpaths    += ./../../gl4-maxwell/ConservativeRaster
ConservativeRaster_debug_hpaths    += ./../../../extensions/include
ConservativeRaster_debug_hpaths    += ./../../../extensions/externals/include
ConservativeRaster_debug_hpaths    += ./../../../extensions/externals/include/GLFW
ConservativeRaster_debug_lpaths    := 
ConservativeRaster_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_debug_defines   := $(ConservativeRaster_custom_defines)
ConservativeRaster_debug_defines   += LINUX=1
ConservativeRaster_debug_defines   += GLEW_NO_GLU=1
ConservativeRaster_debug_defines   += _DEBUG
ConservativeRaster_debug_libraries := 
ConservativeRaster_debug_libraries += NvAppBaseD
ConservativeRaster_debug_libraries += NvUID
ConservativeRaster_debug_libraries += NvAssetLoaderD
ConservativeRaster_debug_libraries += NvModelD
ConservativeRaster_debug_libraries += NvGLUtilsD
ConservativeRaster_debug_libraries += NvGamepadD
ConservativeRaster_debug_libraries += HalfD
ConservativeRaster_debug_libraries += GLEW
ConservativeRaster_debug_libraries += glfw3
ConservativeRaster_debug_libraries += X11
ConservativeRaster_debug_libraries += Xrandr
ConservativeRaster_debug_libraries += Xi
ConservativeRaster_debug_libraries += rt
ConservativeRaster_debug_libraries += m
ConservativeRaster_debug_libraries += GL
ConservativeRaster_debug_libraries += dl
ConservativeRaster_debug_libraries += Xxf86vm
ConservativeRaster_debug_libraries += pthread
ConservativeRaster_debug_libraries += :libHalfD.a
ConservativeRaster_debug_libraries += :libNvAppBaseD.a
ConservativeRaster_debug_libraries += :libNvAssetLoaderD.a
ConservativeRaster_debug_libraries += :libNvGamepadD.a
ConservativeRaster_debug_libraries += :libNvGLUtilsD.a
ConservativeRaster_debug_libraries += :libNvModelD.a
ConservativeRaster_debug_libraries += :libNvUID.a
ConservativeRaster_debug_cflags    := $(ConservativeRaster_custom_cflags)
ConservativeRaster_debug_cflags    += $(addprefix -D, $(ConservativeRaster_debug_defines))
ConservativeRaster_debug_cflags    += $(addprefix -I, $(ConservativeRaster_debug_hpaths))
ConservativeRaster_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
ConservativeRaster_debug_cflags  += -Wno-reorder
ConservativeRaster_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
ConservativeRaster_debug_lflags    := $(ConservativeRaster_custom_lflags)
ConservativeRaster_debug_lflags    += $(addprefix -L, $(ConservativeRaster_debug_lpaths))
ConservativeRaster_debug_lflags    += -Wl,--start-group $(addprefix -l, $(ConservativeRaster_debug_libraries)) -Wl,--end-group
ConservativeRaster_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ConservativeRaster_debug_objsdir  := $(OBJS_DIR)/ConservativeRaster_debug
ConservativeRaster_debug_obj      := 
ConservativeRaster_debug_cpp_o    = $(addprefix $(ConservativeRaster_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ConservativeRaster_cppfiles)))))
ConservativeRaster_debug_obj      += $(ConservativeRaster_debug_cpp_o) 
ConservativeRaster_debug_bin      := ./../../bin/linux-arm32/ConservativeRasterD

clean_ConservativeRaster_debug: 
	@$(ECHO) clean ConservativeRaster debug
	@$(RMDIR) $(ConservativeRaster_debug_objsdir)
	@$(RMDIR) $(ConservativeRaster_debug_bin)

build_ConservativeRaster_debug: postbuild_ConservativeRaster_debug
postbuild_ConservativeRaster_debug: mainbuild_ConservativeRaster_debug
mainbuild_ConservativeRaster_debug: prebuild_ConservativeRaster_debug $(ConservativeRaster_debug_bin)
prebuild_ConservativeRaster_debug:

-include $(ConservativeRaster_debug_cpp_o:%o=%d)

$(ConservativeRaster_debug_bin): $(ConservativeRaster_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/ConservativeRasterD`
	$(CCLD) $^ $(ConservativeRaster_debug_lflags) -o $(ConservativeRaster_debug_bin) 
	@$(ECHO) building $@ complete!

$(ConservativeRaster_debug_cpp_o): $(ConservativeRaster_debug_objsdir)/%.o: 
	@$(ECHO) ConservativeRaster: compiling debug $(filter %$*,$(ConservativeRaster_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(ConservativeRaster_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(ConservativeRaster_cppfiles)) -o $@
ConservativeRaster_release_hpaths    := 
ConservativeRaster_release_hpaths    += ./../../gl4-maxwell/ConservativeRaster
ConservativeRaster_release_hpaths    += ./../../../extensions/include
ConservativeRaster_release_hpaths    += ./../../../extensions/externals/include
ConservativeRaster_release_hpaths    += ./../../../extensions/externals/include/GLFW
ConservativeRaster_release_lpaths    := 
ConservativeRaster_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_lpaths    += ./../../../extensions/lib/linux-arm32
ConservativeRaster_release_defines   := $(ConservativeRaster_custom_defines)
ConservativeRaster_release_defines   += LINUX=1
ConservativeRaster_release_defines   += GLEW_NO_GLU=1
ConservativeRaster_release_defines   += NDEBUG
ConservativeRaster_release_libraries := 
ConservativeRaster_release_libraries += NvAppBase
ConservativeRaster_release_libraries += NvUI
ConservativeRaster_release_libraries += NvAssetLoader
ConservativeRaster_release_libraries += NvModel
ConservativeRaster_release_libraries += NvGLUtils
ConservativeRaster_release_libraries += NvGamepad
ConservativeRaster_release_libraries += Half
ConservativeRaster_release_libraries += GLEW
ConservativeRaster_release_libraries += glfw3
ConservativeRaster_release_libraries += X11
ConservativeRaster_release_libraries += Xrandr
ConservativeRaster_release_libraries += Xi
ConservativeRaster_release_libraries += rt
ConservativeRaster_release_libraries += m
ConservativeRaster_release_libraries += GL
ConservativeRaster_release_libraries += dl
ConservativeRaster_release_libraries += Xxf86vm
ConservativeRaster_release_libraries += pthread
ConservativeRaster_release_libraries += :libHalf.a
ConservativeRaster_release_libraries += :libNvAppBase.a
ConservativeRaster_release_libraries += :libNvAssetLoader.a
ConservativeRaster_release_libraries += :libNvGamepad.a
ConservativeRaster_release_libraries += :libNvGLUtils.a
ConservativeRaster_release_libraries += :libNvModel.a
ConservativeRaster_release_libraries += :libNvUI.a
ConservativeRaster_release_cflags    := $(ConservativeRaster_custom_cflags)
ConservativeRaster_release_cflags    += $(addprefix -D, $(ConservativeRaster_release_defines))
ConservativeRaster_release_cflags    += $(addprefix -I, $(ConservativeRaster_release_hpaths))
ConservativeRaster_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
ConservativeRaster_release_cflags  += -Wno-reorder
ConservativeRaster_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
ConservativeRaster_release_lflags    := $(ConservativeRaster_custom_lflags)
ConservativeRaster_release_lflags    += $(addprefix -L, $(ConservativeRaster_release_lpaths))
ConservativeRaster_release_lflags    += -Wl,--start-group $(addprefix -l, $(ConservativeRaster_release_libraries)) -Wl,--end-group
ConservativeRaster_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ConservativeRaster_release_objsdir  := $(OBJS_DIR)/ConservativeRaster_release
ConservativeRaster_release_obj      := 
ConservativeRaster_release_cpp_o    = $(addprefix $(ConservativeRaster_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ConservativeRaster_cppfiles)))))
ConservativeRaster_release_obj      += $(ConservativeRaster_release_cpp_o) 
ConservativeRaster_release_bin      := ./../../bin/linux-arm32/ConservativeRaster

clean_ConservativeRaster_release: 
	@$(ECHO) clean ConservativeRaster release
	@$(RMDIR) $(ConservativeRaster_release_objsdir)
	@$(RMDIR) $(ConservativeRaster_release_bin)

build_ConservativeRaster_release: postbuild_ConservativeRaster_release
postbuild_ConservativeRaster_release: mainbuild_ConservativeRaster_release
mainbuild_ConservativeRaster_release: prebuild_ConservativeRaster_release $(ConservativeRaster_release_bin)
prebuild_ConservativeRaster_release:

-include $(ConservativeRaster_release_cpp_o:%o=%d)

$(ConservativeRaster_release_bin): $(ConservativeRaster_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/ConservativeRaster`
	$(CCLD) $^ $(ConservativeRaster_release_lflags) -o $(ConservativeRaster_release_bin) 
	@$(ECHO) building $@ complete!

$(ConservativeRaster_release_cpp_o): $(ConservativeRaster_release_objsdir)/%.o: 
	@$(ECHO) ConservativeRaster: compiling release $(filter %$*,$(ConservativeRaster_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(ConservativeRaster_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(ConservativeRaster_cppfiles)) -o $@
