# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = SkinningApp
SkinningApp_cppfiles   += ./../../es2-aurora/SkinningApp/SkinnedMesh.cpp
SkinningApp_cppfiles   += ./../../es2-aurora/SkinningApp/SkinningApp.cpp

SkinningApp_debug_hpaths    := 
SkinningApp_debug_hpaths    += ./../../es2-aurora/SkinningApp
SkinningApp_debug_hpaths    += ./../../../extensions/include
SkinningApp_debug_hpaths    += ./../../../extensions/externals/include
SkinningApp_debug_hpaths    += ./../../../extensions/externals/include/GLFW
SkinningApp_debug_lpaths    := 
SkinningApp_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_debug_defines   := $(SkinningApp_custom_defines)
SkinningApp_debug_defines   += LINUX=1
SkinningApp_debug_defines   += GLEW_NO_GLU=1
SkinningApp_debug_defines   += _DEBUG
SkinningApp_debug_libraries := 
SkinningApp_debug_libraries += NvAppBaseD
SkinningApp_debug_libraries += NvUID
SkinningApp_debug_libraries += NvAssetLoaderD
SkinningApp_debug_libraries += NvModelD
SkinningApp_debug_libraries += NvGLUtilsD
SkinningApp_debug_libraries += NvGamepadD
SkinningApp_debug_libraries += HalfD
SkinningApp_debug_libraries += GLEW
SkinningApp_debug_libraries += glfw3
SkinningApp_debug_libraries += X11
SkinningApp_debug_libraries += Xrandr
SkinningApp_debug_libraries += Xi
SkinningApp_debug_libraries += rt
SkinningApp_debug_libraries += m
SkinningApp_debug_libraries += GL
SkinningApp_debug_libraries += dl
SkinningApp_debug_libraries += Xxf86vm
SkinningApp_debug_libraries += pthread
SkinningApp_debug_libraries += :libHalfD.a
SkinningApp_debug_libraries += :libNvAppBaseD.a
SkinningApp_debug_libraries += :libNvAssetLoaderD.a
SkinningApp_debug_libraries += :libNvGamepadD.a
SkinningApp_debug_libraries += :libNvGLUtilsD.a
SkinningApp_debug_libraries += :libNvModelD.a
SkinningApp_debug_libraries += :libNvUID.a
SkinningApp_debug_cflags    := $(SkinningApp_custom_cflags)
SkinningApp_debug_cflags    += $(addprefix -D, $(SkinningApp_debug_defines))
SkinningApp_debug_cflags    += $(addprefix -I, $(SkinningApp_debug_hpaths))
SkinningApp_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
SkinningApp_debug_cflags  += -Wno-reorder
SkinningApp_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
SkinningApp_debug_lflags    := $(SkinningApp_custom_lflags)
SkinningApp_debug_lflags    += $(addprefix -L, $(SkinningApp_debug_lpaths))
SkinningApp_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SkinningApp_debug_libraries)) -Wl,--end-group
SkinningApp_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
SkinningApp_debug_objsdir  := $(OBJS_DIR)/SkinningApp_debug
SkinningApp_debug_obj      := 
SkinningApp_debug_cpp_o    = $(addprefix $(SkinningApp_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SkinningApp_cppfiles)))))
SkinningApp_debug_obj      += $(SkinningApp_debug_cpp_o) 
SkinningApp_debug_bin      := ./../../bin/linux-arm32/SkinningAppD

clean_SkinningApp_debug: 
	@$(ECHO) clean SkinningApp debug
	@$(RMDIR) $(SkinningApp_debug_objsdir)
	@$(RMDIR) $(SkinningApp_debug_bin)

build_SkinningApp_debug: postbuild_SkinningApp_debug
postbuild_SkinningApp_debug: mainbuild_SkinningApp_debug
mainbuild_SkinningApp_debug: prebuild_SkinningApp_debug $(SkinningApp_debug_bin)
prebuild_SkinningApp_debug:

-include $(SkinningApp_debug_cpp_o:%o=%d)

$(SkinningApp_debug_bin): $(SkinningApp_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/SkinningAppD`
	$(CCLD) $^ $(SkinningApp_debug_lflags) -o $(SkinningApp_debug_bin) 
	@$(ECHO) building $@ complete!

$(SkinningApp_debug_cpp_o): $(SkinningApp_debug_objsdir)/%.o: 
	@$(ECHO) SkinningApp: compiling debug $(filter %$*,$(SkinningApp_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(SkinningApp_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(SkinningApp_cppfiles)) -o $@
SkinningApp_release_hpaths    := 
SkinningApp_release_hpaths    += ./../../es2-aurora/SkinningApp
SkinningApp_release_hpaths    += ./../../../extensions/include
SkinningApp_release_hpaths    += ./../../../extensions/externals/include
SkinningApp_release_hpaths    += ./../../../extensions/externals/include/GLFW
SkinningApp_release_lpaths    := 
SkinningApp_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_lpaths    += ./../../../extensions/lib/linux-arm32
SkinningApp_release_defines   := $(SkinningApp_custom_defines)
SkinningApp_release_defines   += LINUX=1
SkinningApp_release_defines   += GLEW_NO_GLU=1
SkinningApp_release_defines   += NDEBUG
SkinningApp_release_libraries := 
SkinningApp_release_libraries += NvAppBase
SkinningApp_release_libraries += NvUI
SkinningApp_release_libraries += NvAssetLoader
SkinningApp_release_libraries += NvModel
SkinningApp_release_libraries += NvGLUtils
SkinningApp_release_libraries += NvGamepad
SkinningApp_release_libraries += Half
SkinningApp_release_libraries += GLEW
SkinningApp_release_libraries += glfw3
SkinningApp_release_libraries += X11
SkinningApp_release_libraries += Xrandr
SkinningApp_release_libraries += Xi
SkinningApp_release_libraries += rt
SkinningApp_release_libraries += m
SkinningApp_release_libraries += GL
SkinningApp_release_libraries += dl
SkinningApp_release_libraries += Xxf86vm
SkinningApp_release_libraries += pthread
SkinningApp_release_libraries += :libHalf.a
SkinningApp_release_libraries += :libNvAppBase.a
SkinningApp_release_libraries += :libNvAssetLoader.a
SkinningApp_release_libraries += :libNvGamepad.a
SkinningApp_release_libraries += :libNvGLUtils.a
SkinningApp_release_libraries += :libNvModel.a
SkinningApp_release_libraries += :libNvUI.a
SkinningApp_release_cflags    := $(SkinningApp_custom_cflags)
SkinningApp_release_cflags    += $(addprefix -D, $(SkinningApp_release_defines))
SkinningApp_release_cflags    += $(addprefix -I, $(SkinningApp_release_hpaths))
SkinningApp_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
SkinningApp_release_cflags  += -Wno-reorder
SkinningApp_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
SkinningApp_release_lflags    := $(SkinningApp_custom_lflags)
SkinningApp_release_lflags    += $(addprefix -L, $(SkinningApp_release_lpaths))
SkinningApp_release_lflags    += -Wl,--start-group $(addprefix -l, $(SkinningApp_release_libraries)) -Wl,--end-group
SkinningApp_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
SkinningApp_release_objsdir  := $(OBJS_DIR)/SkinningApp_release
SkinningApp_release_obj      := 
SkinningApp_release_cpp_o    = $(addprefix $(SkinningApp_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SkinningApp_cppfiles)))))
SkinningApp_release_obj      += $(SkinningApp_release_cpp_o) 
SkinningApp_release_bin      := ./../../bin/linux-arm32/SkinningApp

clean_SkinningApp_release: 
	@$(ECHO) clean SkinningApp release
	@$(RMDIR) $(SkinningApp_release_objsdir)
	@$(RMDIR) $(SkinningApp_release_bin)

build_SkinningApp_release: postbuild_SkinningApp_release
postbuild_SkinningApp_release: mainbuild_SkinningApp_release
mainbuild_SkinningApp_release: prebuild_SkinningApp_release $(SkinningApp_release_bin)
prebuild_SkinningApp_release:

-include $(SkinningApp_release_cpp_o:%o=%d)

$(SkinningApp_release_bin): $(SkinningApp_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/SkinningApp`
	$(CCLD) $^ $(SkinningApp_release_lflags) -o $(SkinningApp_release_bin) 
	@$(ECHO) building $@ complete!

$(SkinningApp_release_cpp_o): $(SkinningApp_release_objsdir)/%.o: 
	@$(ECHO) SkinningApp: compiling release $(filter %$*,$(SkinningApp_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(SkinningApp_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(SkinningApp_cppfiles)) -o $@
