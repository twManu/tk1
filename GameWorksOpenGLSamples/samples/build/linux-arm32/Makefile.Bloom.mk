# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = Bloom
Bloom_cppfiles   += ./../../es2-aurora/Bloom/Bloom.cpp

Bloom_debug_hpaths    := 
Bloom_debug_hpaths    += ./../../es2-aurora/Bloom
Bloom_debug_hpaths    += ./../../../extensions/include
Bloom_debug_hpaths    += ./../../../extensions/externals/include
Bloom_debug_hpaths    += ./../../../extensions/externals/include/GLFW
Bloom_debug_lpaths    := 
Bloom_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_debug_defines   := $(Bloom_custom_defines)
Bloom_debug_defines   += LINUX=1
Bloom_debug_defines   += GLEW_NO_GLU=1
Bloom_debug_defines   += _DEBUG
Bloom_debug_libraries := 
Bloom_debug_libraries += NvAppBaseD
Bloom_debug_libraries += NvUID
Bloom_debug_libraries += NvAssetLoaderD
Bloom_debug_libraries += NvModelD
Bloom_debug_libraries += NvGLUtilsD
Bloom_debug_libraries += NvGamepadD
Bloom_debug_libraries += HalfD
Bloom_debug_libraries += GLEW
Bloom_debug_libraries += glfw3
Bloom_debug_libraries += X11
Bloom_debug_libraries += Xrandr
Bloom_debug_libraries += Xi
Bloom_debug_libraries += rt
Bloom_debug_libraries += m
Bloom_debug_libraries += GL
Bloom_debug_libraries += dl
Bloom_debug_libraries += Xxf86vm
Bloom_debug_libraries += pthread
Bloom_debug_libraries += :libHalfD.a
Bloom_debug_libraries += :libNvAppBaseD.a
Bloom_debug_libraries += :libNvAssetLoaderD.a
Bloom_debug_libraries += :libNvGamepadD.a
Bloom_debug_libraries += :libNvGLUtilsD.a
Bloom_debug_libraries += :libNvModelD.a
Bloom_debug_libraries += :libNvUID.a
Bloom_debug_libraries += :libR3D.a
Bloom_debug_cflags    := $(Bloom_custom_cflags)
Bloom_debug_cflags    += $(addprefix -D, $(Bloom_debug_defines))
Bloom_debug_cflags    += $(addprefix -I, $(Bloom_debug_hpaths))
Bloom_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
Bloom_debug_cflags  += -Wno-reorder
Bloom_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
Bloom_debug_lflags    := $(Bloom_custom_lflags)
Bloom_debug_lflags    += $(addprefix -L, $(Bloom_debug_lpaths))
Bloom_debug_lflags    += -Wl,--start-group $(addprefix -l, $(Bloom_debug_libraries)) -Wl,--end-group
Bloom_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
Bloom_debug_objsdir  := $(OBJS_DIR)/Bloom_debug
Bloom_debug_obj      := 
Bloom_debug_cpp_o    = $(addprefix $(Bloom_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Bloom_cppfiles)))))
Bloom_debug_obj      += $(Bloom_debug_cpp_o) 
Bloom_debug_bin      := ./../../bin/linux-arm32/BloomD

clean_Bloom_debug: 
	@$(ECHO) clean Bloom debug
	@$(RMDIR) $(Bloom_debug_objsdir)
	@$(RMDIR) $(Bloom_debug_bin)

build_Bloom_debug: postbuild_Bloom_debug
postbuild_Bloom_debug: mainbuild_Bloom_debug
mainbuild_Bloom_debug: prebuild_Bloom_debug $(Bloom_debug_bin)
prebuild_Bloom_debug:

-include $(Bloom_debug_cpp_o:%o=%d)

$(Bloom_debug_bin): $(Bloom_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) $(R3_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/BloomD`
	$(CCLD) $^ $(Bloom_debug_lflags) -o $(Bloom_debug_bin) 
	@$(ECHO) building $@ complete!

$(Bloom_debug_cpp_o): $(Bloom_debug_objsdir)/%.o: 
	@$(ECHO) Bloom: compiling debug $(filter %$*,$(Bloom_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(Bloom_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(Bloom_cppfiles)) -o $@
Bloom_release_hpaths    := 
Bloom_release_hpaths    += ./../../es2-aurora/Bloom
Bloom_release_hpaths    += ./../../../extensions/include
Bloom_release_hpaths    += ./../../../extensions/externals/include
Bloom_release_hpaths    += ./../../../extensions/externals/include/GLFW
Bloom_release_lpaths    := 
Bloom_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/lib/linux-arm32
Bloom_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
Bloom_release_defines   := $(Bloom_custom_defines)
Bloom_release_defines   += LINUX=1
Bloom_release_defines   += GLEW_NO_GLU=1
Bloom_release_defines   += NDEBUG
Bloom_release_libraries := 
Bloom_release_libraries += NvAppBase
Bloom_release_libraries += NvUI
Bloom_release_libraries += NvAssetLoader
Bloom_release_libraries += NvModel
Bloom_release_libraries += NvGLUtils
Bloom_release_libraries += NvGamepad
Bloom_release_libraries += Half
Bloom_release_libraries += GLEW
Bloom_release_libraries += glfw3
Bloom_release_libraries += X11
Bloom_release_libraries += Xrandr
Bloom_release_libraries += Xi
Bloom_release_libraries += rt
Bloom_release_libraries += m
Bloom_release_libraries += GL
Bloom_release_libraries += dl
Bloom_release_libraries += Xxf86vm
Bloom_release_libraries += pthread
Bloom_release_libraries += :libHalf.a
Bloom_release_libraries += :libNvAppBase.a
Bloom_release_libraries += :libNvAssetLoader.a
Bloom_release_libraries += :libNvGamepad.a
Bloom_release_libraries += :libNvGLUtils.a
Bloom_release_libraries += :libNvModel.a
Bloom_release_libraries += :libNvUI.a
Bloom_release_libraries += :libR3.a
Bloom_release_cflags    := $(Bloom_custom_cflags)
Bloom_release_cflags    += $(addprefix -D, $(Bloom_release_defines))
Bloom_release_cflags    += $(addprefix -I, $(Bloom_release_hpaths))
Bloom_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
Bloom_release_cflags  += -Wno-reorder
Bloom_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
Bloom_release_lflags    := $(Bloom_custom_lflags)
Bloom_release_lflags    += $(addprefix -L, $(Bloom_release_lpaths))
Bloom_release_lflags    += -Wl,--start-group $(addprefix -l, $(Bloom_release_libraries)) -Wl,--end-group
Bloom_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
Bloom_release_objsdir  := $(OBJS_DIR)/Bloom_release
Bloom_release_obj      := 
Bloom_release_cpp_o    = $(addprefix $(Bloom_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Bloom_cppfiles)))))
Bloom_release_obj      += $(Bloom_release_cpp_o) 
Bloom_release_bin      := ./../../bin/linux-arm32/Bloom

clean_Bloom_release: 
	@$(ECHO) clean Bloom release
	@$(RMDIR) $(Bloom_release_objsdir)
	@$(RMDIR) $(Bloom_release_bin)

build_Bloom_release: postbuild_Bloom_release
postbuild_Bloom_release: mainbuild_Bloom_release
mainbuild_Bloom_release: prebuild_Bloom_release $(Bloom_release_bin)
prebuild_Bloom_release:

-include $(Bloom_release_cpp_o:%o=%d)

$(Bloom_release_bin): $(Bloom_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) $(R3_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/Bloom`
	$(CCLD) $^ $(Bloom_release_lflags) -o $(Bloom_release_bin) 
	@$(ECHO) building $@ complete!

$(Bloom_release_cpp_o): $(Bloom_release_objsdir)/%.o: 
	@$(ECHO) Bloom: compiling release $(filter %$*,$(Bloom_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(Bloom_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(Bloom_cppfiles)) -o $@
