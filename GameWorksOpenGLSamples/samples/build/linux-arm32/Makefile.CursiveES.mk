# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = CursiveES
CursiveES_cppfiles   += ./../../nvpr/CursiveES/Cursive.cpp
CursiveES_cppfiles   += ./../../nvpr/CursiveES/cg4cpp_xform.cpp
CursiveES_cppfiles   += ./../../nvpr/CursiveES/this_is_crazy.cpp

CursiveES_debug_hpaths    := 
CursiveES_debug_hpaths    += ./../../nvpr/CursiveES
CursiveES_debug_hpaths    += ./../../../extensions/include
CursiveES_debug_hpaths    += ./../../../extensions/externals/include
CursiveES_debug_hpaths    += ./../../../extensions/externals/include/GLFW
CursiveES_debug_lpaths    := 
CursiveES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_debug_defines   := $(CursiveES_custom_defines)
CursiveES_debug_defines   += LINUX=1
CursiveES_debug_defines   += GLEW_NO_GLU=1
CursiveES_debug_defines   += _DEBUG
CursiveES_debug_libraries := 
CursiveES_debug_libraries += NvAppBaseD
CursiveES_debug_libraries += NvUID
CursiveES_debug_libraries += NvAssetLoaderD
CursiveES_debug_libraries += NvModelD
CursiveES_debug_libraries += NvGLUtilsD
CursiveES_debug_libraries += NvGamepadD
CursiveES_debug_libraries += HalfD
CursiveES_debug_libraries += GLEW
CursiveES_debug_libraries += glfw3
CursiveES_debug_libraries += X11
CursiveES_debug_libraries += Xrandr
CursiveES_debug_libraries += Xi
CursiveES_debug_libraries += rt
CursiveES_debug_libraries += m
CursiveES_debug_libraries += GL
CursiveES_debug_libraries += dl
CursiveES_debug_libraries += Xxf86vm
CursiveES_debug_libraries += pthread
CursiveES_debug_libraries += :libcg4cppD.a
CursiveES_debug_libraries += :libHalfD.a
CursiveES_debug_libraries += :libNvAppBaseD.a
CursiveES_debug_libraries += :libNvAssetLoaderD.a
CursiveES_debug_libraries += :libNvGamepadD.a
CursiveES_debug_libraries += :libNvGLUtilsD.a
CursiveES_debug_libraries += :libNvModelD.a
CursiveES_debug_libraries += :libNvUID.a
CursiveES_debug_cflags    := $(CursiveES_custom_cflags)
CursiveES_debug_cflags    += $(addprefix -D, $(CursiveES_debug_defines))
CursiveES_debug_cflags    += $(addprefix -I, $(CursiveES_debug_hpaths))
CursiveES_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
CursiveES_debug_cflags  += -Wno-reorder
CursiveES_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
CursiveES_debug_lflags    := $(CursiveES_custom_lflags)
CursiveES_debug_lflags    += $(addprefix -L, $(CursiveES_debug_lpaths))
CursiveES_debug_lflags    += -Wl,--start-group $(addprefix -l, $(CursiveES_debug_libraries)) -Wl,--end-group
CursiveES_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
CursiveES_debug_objsdir  := $(OBJS_DIR)/CursiveES_debug
CursiveES_debug_obj      := 
CursiveES_debug_cpp_o    = $(addprefix $(CursiveES_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(CursiveES_cppfiles)))))
CursiveES_debug_obj      += $(CursiveES_debug_cpp_o) 
CursiveES_debug_bin      := ./../../bin/linux-arm32/CursiveESD

clean_CursiveES_debug: 
	@$(ECHO) clean CursiveES debug
	@$(RMDIR) $(CursiveES_debug_objsdir)
	@$(RMDIR) $(CursiveES_debug_bin)

build_CursiveES_debug: postbuild_CursiveES_debug
postbuild_CursiveES_debug: mainbuild_CursiveES_debug
mainbuild_CursiveES_debug: prebuild_CursiveES_debug $(CursiveES_debug_bin)
prebuild_CursiveES_debug:

-include $(CursiveES_debug_cpp_o:%o=%d)

$(CursiveES_debug_bin): $(CursiveES_debug_obj) $(cg4cpp_debug_bin) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/CursiveESD`
	$(CCLD) $^ $(CursiveES_debug_lflags) -o $(CursiveES_debug_bin) 
	@$(ECHO) building $@ complete!

$(CursiveES_debug_cpp_o): $(CursiveES_debug_objsdir)/%.o: 
	@$(ECHO) CursiveES: compiling debug $(filter %$*,$(CursiveES_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(CursiveES_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(CursiveES_cppfiles)) -o $@
CursiveES_release_hpaths    := 
CursiveES_release_hpaths    += ./../../nvpr/CursiveES
CursiveES_release_hpaths    += ./../../../extensions/include
CursiveES_release_hpaths    += ./../../../extensions/externals/include
CursiveES_release_hpaths    += ./../../../extensions/externals/include/GLFW
CursiveES_release_lpaths    := 
CursiveES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_lpaths    += ./../../../extensions/lib/linux-arm32
CursiveES_release_defines   := $(CursiveES_custom_defines)
CursiveES_release_defines   += LINUX=1
CursiveES_release_defines   += GLEW_NO_GLU=1
CursiveES_release_defines   += NDEBUG
CursiveES_release_libraries := 
CursiveES_release_libraries += NvAppBase
CursiveES_release_libraries += NvUI
CursiveES_release_libraries += NvAssetLoader
CursiveES_release_libraries += NvModel
CursiveES_release_libraries += NvGLUtils
CursiveES_release_libraries += NvGamepad
CursiveES_release_libraries += Half
CursiveES_release_libraries += GLEW
CursiveES_release_libraries += glfw3
CursiveES_release_libraries += X11
CursiveES_release_libraries += Xrandr
CursiveES_release_libraries += Xi
CursiveES_release_libraries += rt
CursiveES_release_libraries += m
CursiveES_release_libraries += GL
CursiveES_release_libraries += dl
CursiveES_release_libraries += Xxf86vm
CursiveES_release_libraries += pthread
CursiveES_release_libraries += :libcg4cpp.a
CursiveES_release_libraries += :libHalf.a
CursiveES_release_libraries += :libNvAppBase.a
CursiveES_release_libraries += :libNvAssetLoader.a
CursiveES_release_libraries += :libNvGamepad.a
CursiveES_release_libraries += :libNvGLUtils.a
CursiveES_release_libraries += :libNvModel.a
CursiveES_release_libraries += :libNvUI.a
CursiveES_release_cflags    := $(CursiveES_custom_cflags)
CursiveES_release_cflags    += $(addprefix -D, $(CursiveES_release_defines))
CursiveES_release_cflags    += $(addprefix -I, $(CursiveES_release_hpaths))
CursiveES_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
CursiveES_release_cflags  += -Wno-reorder
CursiveES_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
CursiveES_release_lflags    := $(CursiveES_custom_lflags)
CursiveES_release_lflags    += $(addprefix -L, $(CursiveES_release_lpaths))
CursiveES_release_lflags    += -Wl,--start-group $(addprefix -l, $(CursiveES_release_libraries)) -Wl,--end-group
CursiveES_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
CursiveES_release_objsdir  := $(OBJS_DIR)/CursiveES_release
CursiveES_release_obj      := 
CursiveES_release_cpp_o    = $(addprefix $(CursiveES_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(CursiveES_cppfiles)))))
CursiveES_release_obj      += $(CursiveES_release_cpp_o) 
CursiveES_release_bin      := ./../../bin/linux-arm32/CursiveES

clean_CursiveES_release: 
	@$(ECHO) clean CursiveES release
	@$(RMDIR) $(CursiveES_release_objsdir)
	@$(RMDIR) $(CursiveES_release_bin)

build_CursiveES_release: postbuild_CursiveES_release
postbuild_CursiveES_release: mainbuild_CursiveES_release
mainbuild_CursiveES_release: prebuild_CursiveES_release $(CursiveES_release_bin)
prebuild_CursiveES_release:

-include $(CursiveES_release_cpp_o:%o=%d)

$(CursiveES_release_bin): $(CursiveES_release_obj) $(cg4cpp_release_bin) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/CursiveES`
	$(CCLD) $^ $(CursiveES_release_lflags) -o $(CursiveES_release_bin) 
	@$(ECHO) building $@ complete!

$(CursiveES_release_cpp_o): $(CursiveES_release_objsdir)/%.o: 
	@$(ECHO) CursiveES: compiling release $(filter %$*,$(CursiveES_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(CursiveES_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(CursiveES_cppfiles)) -o $@
