# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = InstancedTessellation
InstancedTessellation_cppfiles   += ./../../es2-aurora/InstancedTessellation/InstancedTessellation.cpp

InstancedTessellation_debug_hpaths    := 
InstancedTessellation_debug_hpaths    += ./../../es2-aurora/InstancedTessellation
InstancedTessellation_debug_hpaths    += ./../../../extensions/include
InstancedTessellation_debug_hpaths    += ./../../../extensions/externals/include
InstancedTessellation_debug_hpaths    += ./../../../extensions/externals/include/GLFW
InstancedTessellation_debug_lpaths    := 
InstancedTessellation_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_debug_defines   := $(InstancedTessellation_custom_defines)
InstancedTessellation_debug_defines   += LINUX=1
InstancedTessellation_debug_defines   += GLEW_NO_GLU=1
InstancedTessellation_debug_defines   += _DEBUG
InstancedTessellation_debug_libraries := 
InstancedTessellation_debug_libraries += NvAppBaseD
InstancedTessellation_debug_libraries += NvUID
InstancedTessellation_debug_libraries += NvAssetLoaderD
InstancedTessellation_debug_libraries += NvModelD
InstancedTessellation_debug_libraries += NvGLUtilsD
InstancedTessellation_debug_libraries += NvGamepadD
InstancedTessellation_debug_libraries += HalfD
InstancedTessellation_debug_libraries += GLEW
InstancedTessellation_debug_libraries += glfw3
InstancedTessellation_debug_libraries += X11
InstancedTessellation_debug_libraries += Xrandr
InstancedTessellation_debug_libraries += Xi
InstancedTessellation_debug_libraries += rt
InstancedTessellation_debug_libraries += m
InstancedTessellation_debug_libraries += GL
InstancedTessellation_debug_libraries += dl
InstancedTessellation_debug_libraries += Xxf86vm
InstancedTessellation_debug_libraries += pthread
InstancedTessellation_debug_libraries += :libHalfD.a
InstancedTessellation_debug_libraries += :libNvAppBaseD.a
InstancedTessellation_debug_libraries += :libNvAssetLoaderD.a
InstancedTessellation_debug_libraries += :libNvGamepadD.a
InstancedTessellation_debug_libraries += :libNvGLUtilsD.a
InstancedTessellation_debug_libraries += :libNvModelD.a
InstancedTessellation_debug_libraries += :libNvUID.a
InstancedTessellation_debug_cflags    := $(InstancedTessellation_custom_cflags)
InstancedTessellation_debug_cflags    += $(addprefix -D, $(InstancedTessellation_debug_defines))
InstancedTessellation_debug_cflags    += $(addprefix -I, $(InstancedTessellation_debug_hpaths))
InstancedTessellation_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
InstancedTessellation_debug_cflags  += -Wno-reorder
InstancedTessellation_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
InstancedTessellation_debug_lflags    := $(InstancedTessellation_custom_lflags)
InstancedTessellation_debug_lflags    += $(addprefix -L, $(InstancedTessellation_debug_lpaths))
InstancedTessellation_debug_lflags    += -Wl,--start-group $(addprefix -l, $(InstancedTessellation_debug_libraries)) -Wl,--end-group
InstancedTessellation_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
InstancedTessellation_debug_objsdir  := $(OBJS_DIR)/InstancedTessellation_debug
InstancedTessellation_debug_obj      := 
InstancedTessellation_debug_cpp_o    = $(addprefix $(InstancedTessellation_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(InstancedTessellation_cppfiles)))))
InstancedTessellation_debug_obj      += $(InstancedTessellation_debug_cpp_o) 
InstancedTessellation_debug_bin      := ./../../bin/linux-arm32/InstancedTessellationD

clean_InstancedTessellation_debug: 
	@$(ECHO) clean InstancedTessellation debug
	@$(RMDIR) $(InstancedTessellation_debug_objsdir)
	@$(RMDIR) $(InstancedTessellation_debug_bin)

build_InstancedTessellation_debug: postbuild_InstancedTessellation_debug
postbuild_InstancedTessellation_debug: mainbuild_InstancedTessellation_debug
mainbuild_InstancedTessellation_debug: prebuild_InstancedTessellation_debug $(InstancedTessellation_debug_bin)
prebuild_InstancedTessellation_debug:

-include $(InstancedTessellation_debug_cpp_o:%o=%d)

$(InstancedTessellation_debug_bin): $(InstancedTessellation_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/InstancedTessellationD`
	$(CCLD) $^ $(InstancedTessellation_debug_lflags) -o $(InstancedTessellation_debug_bin) 
	@$(ECHO) building $@ complete!

$(InstancedTessellation_debug_cpp_o): $(InstancedTessellation_debug_objsdir)/%.o: 
	@$(ECHO) InstancedTessellation: compiling debug $(filter %$*,$(InstancedTessellation_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(InstancedTessellation_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(InstancedTessellation_cppfiles)) -o $@
InstancedTessellation_release_hpaths    := 
InstancedTessellation_release_hpaths    += ./../../es2-aurora/InstancedTessellation
InstancedTessellation_release_hpaths    += ./../../../extensions/include
InstancedTessellation_release_hpaths    += ./../../../extensions/externals/include
InstancedTessellation_release_hpaths    += ./../../../extensions/externals/include/GLFW
InstancedTessellation_release_lpaths    := 
InstancedTessellation_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_lpaths    += ./../../../extensions/lib/linux-arm32
InstancedTessellation_release_defines   := $(InstancedTessellation_custom_defines)
InstancedTessellation_release_defines   += LINUX=1
InstancedTessellation_release_defines   += GLEW_NO_GLU=1
InstancedTessellation_release_defines   += NDEBUG
InstancedTessellation_release_libraries := 
InstancedTessellation_release_libraries += NvAppBase
InstancedTessellation_release_libraries += NvUI
InstancedTessellation_release_libraries += NvAssetLoader
InstancedTessellation_release_libraries += NvModel
InstancedTessellation_release_libraries += NvGLUtils
InstancedTessellation_release_libraries += NvGamepad
InstancedTessellation_release_libraries += Half
InstancedTessellation_release_libraries += GLEW
InstancedTessellation_release_libraries += glfw3
InstancedTessellation_release_libraries += X11
InstancedTessellation_release_libraries += Xrandr
InstancedTessellation_release_libraries += Xi
InstancedTessellation_release_libraries += rt
InstancedTessellation_release_libraries += m
InstancedTessellation_release_libraries += GL
InstancedTessellation_release_libraries += dl
InstancedTessellation_release_libraries += Xxf86vm
InstancedTessellation_release_libraries += pthread
InstancedTessellation_release_libraries += :libHalf.a
InstancedTessellation_release_libraries += :libNvAppBase.a
InstancedTessellation_release_libraries += :libNvAssetLoader.a
InstancedTessellation_release_libraries += :libNvGamepad.a
InstancedTessellation_release_libraries += :libNvGLUtils.a
InstancedTessellation_release_libraries += :libNvModel.a
InstancedTessellation_release_libraries += :libNvUI.a
InstancedTessellation_release_cflags    := $(InstancedTessellation_custom_cflags)
InstancedTessellation_release_cflags    += $(addprefix -D, $(InstancedTessellation_release_defines))
InstancedTessellation_release_cflags    += $(addprefix -I, $(InstancedTessellation_release_hpaths))
InstancedTessellation_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
InstancedTessellation_release_cflags  += -Wno-reorder
InstancedTessellation_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
InstancedTessellation_release_lflags    := $(InstancedTessellation_custom_lflags)
InstancedTessellation_release_lflags    += $(addprefix -L, $(InstancedTessellation_release_lpaths))
InstancedTessellation_release_lflags    += -Wl,--start-group $(addprefix -l, $(InstancedTessellation_release_libraries)) -Wl,--end-group
InstancedTessellation_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
InstancedTessellation_release_objsdir  := $(OBJS_DIR)/InstancedTessellation_release
InstancedTessellation_release_obj      := 
InstancedTessellation_release_cpp_o    = $(addprefix $(InstancedTessellation_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(InstancedTessellation_cppfiles)))))
InstancedTessellation_release_obj      += $(InstancedTessellation_release_cpp_o) 
InstancedTessellation_release_bin      := ./../../bin/linux-arm32/InstancedTessellation

clean_InstancedTessellation_release: 
	@$(ECHO) clean InstancedTessellation release
	@$(RMDIR) $(InstancedTessellation_release_objsdir)
	@$(RMDIR) $(InstancedTessellation_release_bin)

build_InstancedTessellation_release: postbuild_InstancedTessellation_release
postbuild_InstancedTessellation_release: mainbuild_InstancedTessellation_release
mainbuild_InstancedTessellation_release: prebuild_InstancedTessellation_release $(InstancedTessellation_release_bin)
prebuild_InstancedTessellation_release:

-include $(InstancedTessellation_release_cpp_o:%o=%d)

$(InstancedTessellation_release_bin): $(InstancedTessellation_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/InstancedTessellation`
	$(CCLD) $^ $(InstancedTessellation_release_lflags) -o $(InstancedTessellation_release_bin) 
	@$(ECHO) building $@ complete!

$(InstancedTessellation_release_cpp_o): $(InstancedTessellation_release_objsdir)/%.o: 
	@$(ECHO) InstancedTessellation: compiling release $(filter %$*,$(InstancedTessellation_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(InstancedTessellation_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(InstancedTessellation_cppfiles)) -o $@
