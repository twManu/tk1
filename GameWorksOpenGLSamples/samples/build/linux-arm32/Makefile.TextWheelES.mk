# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = TextWheelES
TextWheelES_cppfiles   += ./../../nvpr/TextWheelES/TextWheel.cpp
TextWheelES_cppfiles   += ./../../nvpr/TextWheelES/cg4cpp_xform.cpp
TextWheelES_cppfiles   += ./../../nvpr/TextWheelES/render_font.cpp
TextWheelES_cppfiles   += ./../../nvpr/TextWheelES/sRGB_math.cpp

TextWheelES_debug_hpaths    := 
TextWheelES_debug_hpaths    += ./../../nvpr/TextWheelES
TextWheelES_debug_hpaths    += ./../../../extensions/include
TextWheelES_debug_hpaths    += ./../../../extensions/externals/include
TextWheelES_debug_hpaths    += ./../../../extensions/externals/include/GLFW
TextWheelES_debug_lpaths    := 
TextWheelES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_debug_defines   := $(TextWheelES_custom_defines)
TextWheelES_debug_defines   += LINUX=1
TextWheelES_debug_defines   += GLEW_NO_GLU=1
TextWheelES_debug_defines   += _DEBUG
TextWheelES_debug_libraries := 
TextWheelES_debug_libraries += NvAppBaseD
TextWheelES_debug_libraries += NvUID
TextWheelES_debug_libraries += NvAssetLoaderD
TextWheelES_debug_libraries += NvModelD
TextWheelES_debug_libraries += NvGLUtilsD
TextWheelES_debug_libraries += NvGamepadD
TextWheelES_debug_libraries += HalfD
TextWheelES_debug_libraries += GLEW
TextWheelES_debug_libraries += glfw3
TextWheelES_debug_libraries += X11
TextWheelES_debug_libraries += Xrandr
TextWheelES_debug_libraries += Xi
TextWheelES_debug_libraries += rt
TextWheelES_debug_libraries += m
TextWheelES_debug_libraries += GL
TextWheelES_debug_libraries += dl
TextWheelES_debug_libraries += Xxf86vm
TextWheelES_debug_libraries += pthread
TextWheelES_debug_libraries += :libcg4cppD.a
TextWheelES_debug_libraries += :libHalfD.a
TextWheelES_debug_libraries += :libNvAppBaseD.a
TextWheelES_debug_libraries += :libNvAssetLoaderD.a
TextWheelES_debug_libraries += :libNvGamepadD.a
TextWheelES_debug_libraries += :libNvGLUtilsD.a
TextWheelES_debug_libraries += :libNvModelD.a
TextWheelES_debug_libraries += :libNvUID.a
TextWheelES_debug_cflags    := $(TextWheelES_custom_cflags)
TextWheelES_debug_cflags    += $(addprefix -D, $(TextWheelES_debug_defines))
TextWheelES_debug_cflags    += $(addprefix -I, $(TextWheelES_debug_hpaths))
TextWheelES_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextWheelES_debug_cflags  += -Wno-reorder
TextWheelES_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
TextWheelES_debug_lflags    := $(TextWheelES_custom_lflags)
TextWheelES_debug_lflags    += $(addprefix -L, $(TextWheelES_debug_lpaths))
TextWheelES_debug_lflags    += -Wl,--start-group $(addprefix -l, $(TextWheelES_debug_libraries)) -Wl,--end-group
TextWheelES_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TextWheelES_debug_objsdir  := $(OBJS_DIR)/TextWheelES_debug
TextWheelES_debug_obj      := 
TextWheelES_debug_cpp_o    = $(addprefix $(TextWheelES_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TextWheelES_cppfiles)))))
TextWheelES_debug_obj      += $(TextWheelES_debug_cpp_o) 
TextWheelES_debug_bin      := ./../../bin/linux-arm32/TextWheelESD

clean_TextWheelES_debug: 
	@$(ECHO) clean TextWheelES debug
	@$(RMDIR) $(TextWheelES_debug_objsdir)
	@$(RMDIR) $(TextWheelES_debug_bin)

build_TextWheelES_debug: postbuild_TextWheelES_debug
postbuild_TextWheelES_debug: mainbuild_TextWheelES_debug
mainbuild_TextWheelES_debug: prebuild_TextWheelES_debug $(TextWheelES_debug_bin)
prebuild_TextWheelES_debug:

-include $(TextWheelES_debug_cpp_o:%o=%d)

$(TextWheelES_debug_bin): $(TextWheelES_debug_obj) $(cg4cpp_debug_bin) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/TextWheelESD`
	$(CCLD) $^ $(TextWheelES_debug_lflags) -o $(TextWheelES_debug_bin) 
	@$(ECHO) building $@ complete!

$(TextWheelES_debug_cpp_o): $(TextWheelES_debug_objsdir)/%.o: 
	@$(ECHO) TextWheelES: compiling debug $(filter %$*,$(TextWheelES_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(TextWheelES_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(TextWheelES_cppfiles)) -o $@
TextWheelES_release_hpaths    := 
TextWheelES_release_hpaths    += ./../../nvpr/TextWheelES
TextWheelES_release_hpaths    += ./../../../extensions/include
TextWheelES_release_hpaths    += ./../../../extensions/externals/include
TextWheelES_release_hpaths    += ./../../../extensions/externals/include/GLFW
TextWheelES_release_lpaths    := 
TextWheelES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_lpaths    += ./../../../extensions/lib/linux-arm32
TextWheelES_release_defines   := $(TextWheelES_custom_defines)
TextWheelES_release_defines   += LINUX=1
TextWheelES_release_defines   += GLEW_NO_GLU=1
TextWheelES_release_defines   += NDEBUG
TextWheelES_release_libraries := 
TextWheelES_release_libraries += NvAppBase
TextWheelES_release_libraries += NvUI
TextWheelES_release_libraries += NvAssetLoader
TextWheelES_release_libraries += NvModel
TextWheelES_release_libraries += NvGLUtils
TextWheelES_release_libraries += NvGamepad
TextWheelES_release_libraries += Half
TextWheelES_release_libraries += GLEW
TextWheelES_release_libraries += glfw3
TextWheelES_release_libraries += X11
TextWheelES_release_libraries += Xrandr
TextWheelES_release_libraries += Xi
TextWheelES_release_libraries += rt
TextWheelES_release_libraries += m
TextWheelES_release_libraries += GL
TextWheelES_release_libraries += dl
TextWheelES_release_libraries += Xxf86vm
TextWheelES_release_libraries += pthread
TextWheelES_release_libraries += :libcg4cpp.a
TextWheelES_release_libraries += :libHalf.a
TextWheelES_release_libraries += :libNvAppBase.a
TextWheelES_release_libraries += :libNvAssetLoader.a
TextWheelES_release_libraries += :libNvGamepad.a
TextWheelES_release_libraries += :libNvGLUtils.a
TextWheelES_release_libraries += :libNvModel.a
TextWheelES_release_libraries += :libNvUI.a
TextWheelES_release_cflags    := $(TextWheelES_custom_cflags)
TextWheelES_release_cflags    += $(addprefix -D, $(TextWheelES_release_defines))
TextWheelES_release_cflags    += $(addprefix -I, $(TextWheelES_release_hpaths))
TextWheelES_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
TextWheelES_release_cflags  += -Wno-reorder
TextWheelES_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
TextWheelES_release_lflags    := $(TextWheelES_custom_lflags)
TextWheelES_release_lflags    += $(addprefix -L, $(TextWheelES_release_lpaths))
TextWheelES_release_lflags    += -Wl,--start-group $(addprefix -l, $(TextWheelES_release_libraries)) -Wl,--end-group
TextWheelES_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
TextWheelES_release_objsdir  := $(OBJS_DIR)/TextWheelES_release
TextWheelES_release_obj      := 
TextWheelES_release_cpp_o    = $(addprefix $(TextWheelES_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(TextWheelES_cppfiles)))))
TextWheelES_release_obj      += $(TextWheelES_release_cpp_o) 
TextWheelES_release_bin      := ./../../bin/linux-arm32/TextWheelES

clean_TextWheelES_release: 
	@$(ECHO) clean TextWheelES release
	@$(RMDIR) $(TextWheelES_release_objsdir)
	@$(RMDIR) $(TextWheelES_release_bin)

build_TextWheelES_release: postbuild_TextWheelES_release
postbuild_TextWheelES_release: mainbuild_TextWheelES_release
mainbuild_TextWheelES_release: prebuild_TextWheelES_release $(TextWheelES_release_bin)
prebuild_TextWheelES_release:

-include $(TextWheelES_release_cpp_o:%o=%d)

$(TextWheelES_release_bin): $(TextWheelES_release_obj) $(cg4cpp_release_bin) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/TextWheelES`
	$(CCLD) $^ $(TextWheelES_release_lflags) -o $(TextWheelES_release_bin) 
	@$(ECHO) building $@ complete!

$(TextWheelES_release_cpp_o): $(TextWheelES_release_objsdir)/%.o: 
	@$(ECHO) TextWheelES: compiling release $(filter %$*,$(TextWheelES_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(TextWheelES_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(TextWheelES_cppfiles)) -o $@
