# Makefile generated by XPJ for linux-arm32
-include Makefile.custom
ProjectName = ComputeParticles
ComputeParticles_cppfiles   += ./../../es3aep-kepler/ComputeParticles/ComputeParticles.cpp
ComputeParticles_cppfiles   += ./../../es3aep-kepler/ComputeParticles/ParticleSystem.cpp
ComputeParticles_cppfiles   += ./../../es3aep-kepler/ComputeParticles/noise.cpp

ComputeParticles_debug_hpaths    := 
ComputeParticles_debug_hpaths    += ./../../es3aep-kepler/ComputeParticles/assets/shaders
ComputeParticles_debug_hpaths    += ./../../es3aep-kepler/ComputeParticles
ComputeParticles_debug_hpaths    += ./../../../extensions/include
ComputeParticles_debug_hpaths    += ./../../../extensions/externals/include
ComputeParticles_debug_hpaths    += ./../../../extensions/externals/include/GLFW
ComputeParticles_debug_lpaths    := 
ComputeParticles_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_debug_defines   := $(ComputeParticles_custom_defines)
ComputeParticles_debug_defines   += LINUX=1
ComputeParticles_debug_defines   += GLEW_NO_GLU=1
ComputeParticles_debug_defines   += _DEBUG
ComputeParticles_debug_libraries := 
ComputeParticles_debug_libraries += NvAppBaseD
ComputeParticles_debug_libraries += NvUID
ComputeParticles_debug_libraries += NvAssetLoaderD
ComputeParticles_debug_libraries += NvModelD
ComputeParticles_debug_libraries += NvGLUtilsD
ComputeParticles_debug_libraries += NvGamepadD
ComputeParticles_debug_libraries += HalfD
ComputeParticles_debug_libraries += GLEW
ComputeParticles_debug_libraries += glfw3
ComputeParticles_debug_libraries += X11
ComputeParticles_debug_libraries += Xrandr
ComputeParticles_debug_libraries += Xi
ComputeParticles_debug_libraries += rt
ComputeParticles_debug_libraries += m
ComputeParticles_debug_libraries += GL
ComputeParticles_debug_libraries += dl
ComputeParticles_debug_libraries += Xxf86vm
ComputeParticles_debug_libraries += pthread
ComputeParticles_debug_libraries += :libHalfD.a
ComputeParticles_debug_libraries += :libNvAppBaseD.a
ComputeParticles_debug_libraries += :libNvAssetLoaderD.a
ComputeParticles_debug_libraries += :libNvGamepadD.a
ComputeParticles_debug_libraries += :libNvGLUtilsD.a
ComputeParticles_debug_libraries += :libNvModelD.a
ComputeParticles_debug_libraries += :libNvUID.a
ComputeParticles_debug_cflags    := $(ComputeParticles_custom_cflags)
ComputeParticles_debug_cflags    += $(addprefix -D, $(ComputeParticles_debug_defines))
ComputeParticles_debug_cflags    += $(addprefix -I, $(ComputeParticles_debug_hpaths))
ComputeParticles_debug_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
ComputeParticles_debug_cflags  += -Wno-reorder
ComputeParticles_debug_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
ComputeParticles_debug_lflags    := $(ComputeParticles_custom_lflags)
ComputeParticles_debug_lflags    += $(addprefix -L, $(ComputeParticles_debug_lpaths))
ComputeParticles_debug_lflags    += -Wl,--start-group $(addprefix -l, $(ComputeParticles_debug_libraries)) -Wl,--end-group
ComputeParticles_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ComputeParticles_debug_objsdir  := $(OBJS_DIR)/ComputeParticles_debug
ComputeParticles_debug_obj      := 
ComputeParticles_debug_cpp_o    = $(addprefix $(ComputeParticles_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ComputeParticles_cppfiles)))))
ComputeParticles_debug_obj      += $(ComputeParticles_debug_cpp_o) 
ComputeParticles_debug_bin      := ./../../bin/linux-arm32/ComputeParticlesD

clean_ComputeParticles_debug: 
	@$(ECHO) clean ComputeParticles debug
	@$(RMDIR) $(ComputeParticles_debug_objsdir)
	@$(RMDIR) $(ComputeParticles_debug_bin)

build_ComputeParticles_debug: postbuild_ComputeParticles_debug
postbuild_ComputeParticles_debug: mainbuild_ComputeParticles_debug
mainbuild_ComputeParticles_debug: prebuild_ComputeParticles_debug $(ComputeParticles_debug_bin)
prebuild_ComputeParticles_debug:

-include $(ComputeParticles_debug_cpp_o:%o=%d)

$(ComputeParticles_debug_bin): $(ComputeParticles_debug_obj) $(Half_debug_bin) $(NvAppBase_debug_bin) $(NvAssetLoader_debug_bin) $(NvGamepad_debug_bin) $(NvGLUtils_debug_bin) $(NvModel_debug_bin) $(NvUI_debug_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/ComputeParticlesD`
	$(CCLD) $^ $(ComputeParticles_debug_lflags) -o $(ComputeParticles_debug_bin) 
	@$(ECHO) building $@ complete!

$(ComputeParticles_debug_cpp_o): $(ComputeParticles_debug_objsdir)/%.o: 
	@$(ECHO) ComputeParticles: compiling debug $(filter %$*,$(ComputeParticles_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(ComputeParticles_debug_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(ComputeParticles_cppfiles)) -o $@
ComputeParticles_release_hpaths    := 
ComputeParticles_release_hpaths    += ./../../es3aep-kepler/ComputeParticles/assets/shaders
ComputeParticles_release_hpaths    += ./../../es3aep-kepler/ComputeParticles
ComputeParticles_release_hpaths    += ./../../../extensions/include
ComputeParticles_release_hpaths    += ./../../../extensions/externals/include
ComputeParticles_release_hpaths    += ./../../../extensions/externals/include/GLFW
ComputeParticles_release_lpaths    := 
ComputeParticles_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/externals/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_lpaths    += ./../../../extensions/lib/linux-arm32
ComputeParticles_release_defines   := $(ComputeParticles_custom_defines)
ComputeParticles_release_defines   += LINUX=1
ComputeParticles_release_defines   += GLEW_NO_GLU=1
ComputeParticles_release_defines   += NDEBUG
ComputeParticles_release_libraries := 
ComputeParticles_release_libraries += NvAppBase
ComputeParticles_release_libraries += NvUI
ComputeParticles_release_libraries += NvAssetLoader
ComputeParticles_release_libraries += NvModel
ComputeParticles_release_libraries += NvGLUtils
ComputeParticles_release_libraries += NvGamepad
ComputeParticles_release_libraries += Half
ComputeParticles_release_libraries += GLEW
ComputeParticles_release_libraries += glfw3
ComputeParticles_release_libraries += X11
ComputeParticles_release_libraries += Xrandr
ComputeParticles_release_libraries += Xi
ComputeParticles_release_libraries += rt
ComputeParticles_release_libraries += m
ComputeParticles_release_libraries += GL
ComputeParticles_release_libraries += dl
ComputeParticles_release_libraries += Xxf86vm
ComputeParticles_release_libraries += pthread
ComputeParticles_release_libraries += :libHalf.a
ComputeParticles_release_libraries += :libNvAppBase.a
ComputeParticles_release_libraries += :libNvAssetLoader.a
ComputeParticles_release_libraries += :libNvGamepad.a
ComputeParticles_release_libraries += :libNvGLUtils.a
ComputeParticles_release_libraries += :libNvModel.a
ComputeParticles_release_libraries += :libNvUI.a
ComputeParticles_release_cflags    := $(ComputeParticles_custom_cflags)
ComputeParticles_release_cflags    += $(addprefix -D, $(ComputeParticles_release_defines))
ComputeParticles_release_cflags    += $(addprefix -I, $(ComputeParticles_release_hpaths))
ComputeParticles_release_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function
ComputeParticles_release_cflags  += -Wno-reorder
ComputeParticles_release_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
ComputeParticles_release_lflags    := $(ComputeParticles_custom_lflags)
ComputeParticles_release_lflags    += $(addprefix -L, $(ComputeParticles_release_lpaths))
ComputeParticles_release_lflags    += -Wl,--start-group $(addprefix -l, $(ComputeParticles_release_libraries)) -Wl,--end-group
ComputeParticles_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ComputeParticles_release_objsdir  := $(OBJS_DIR)/ComputeParticles_release
ComputeParticles_release_obj      := 
ComputeParticles_release_cpp_o    = $(addprefix $(ComputeParticles_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ComputeParticles_cppfiles)))))
ComputeParticles_release_obj      += $(ComputeParticles_release_cpp_o) 
ComputeParticles_release_bin      := ./../../bin/linux-arm32/ComputeParticles

clean_ComputeParticles_release: 
	@$(ECHO) clean ComputeParticles release
	@$(RMDIR) $(ComputeParticles_release_objsdir)
	@$(RMDIR) $(ComputeParticles_release_bin)

build_ComputeParticles_release: postbuild_ComputeParticles_release
postbuild_ComputeParticles_release: mainbuild_ComputeParticles_release
mainbuild_ComputeParticles_release: prebuild_ComputeParticles_release $(ComputeParticles_release_bin)
prebuild_ComputeParticles_release:

-include $(ComputeParticles_release_cpp_o:%o=%d)

$(ComputeParticles_release_bin): $(ComputeParticles_release_obj) $(Half_release_bin) $(NvAppBase_release_bin) $(NvAssetLoader_release_bin) $(NvGamepad_release_bin) $(NvGLUtils_release_bin) $(NvModel_release_bin) $(NvUI_release_bin) 
	@mkdir -p `dirname ./../../bin/linux-arm32/ComputeParticles`
	$(CCLD) $^ $(ComputeParticles_release_lflags) -o $(ComputeParticles_release_bin) 
	@$(ECHO) building $@ complete!

$(ComputeParticles_release_cpp_o): $(ComputeParticles_release_objsdir)/%.o: 
	@$(ECHO) ComputeParticles: compiling release $(filter %$*,$(ComputeParticles_cppfiles))...
	@mkdir -p $(dir $(@))
	$(CXX) $(ComputeParticles_release_cflags) -MMD -MP -MF $(subst .cpp.o,.cpp.d,$@) -c $(filter %$*,$(ComputeParticles_cppfiles)) -o $@
